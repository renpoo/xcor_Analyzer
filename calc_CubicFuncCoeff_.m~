function [ a3, a2, a1, a0 ] = calc_CubicFuncCoeff_( ts, te, F1ts, F2te, D1ts, D2te )

% Target Formula: g(t) = a3*t^3 + a2*t^2 + a1*t + a0;
 

% Cross Product 
CP = ts * te;

% Delta
Delta = te - ts;


a3 = ( Delta * ( D1ts + D2te ) - 2 * ( F2te - F1ts ) ) / Delta^3;
a3n = (te*D2te - ts*D2te + te*D1ts - ts*D1ts - 2*F2te + 2*F1ts) / Delta^3

disp (a3);
disp (a3n);


a2 = - ( ( te + 2 * ts ) * Delta * D2te - ( 2 * te + ts ) * Delta * D1ts - 3 * ( te + ts ) * ( F2te - F1ts ) ) / Delta^3;

-(te^2*A2*omega2*cos(omega2*te + sigma2) + te*ts*A2*omega2*cos(omega2*te + sigma2)
- 2*ts^2*A2*omega2*cos(omega2*te + sigma2) + 2*A1*omega1*te^2*cos(omega1*ts + sigma1)
- A1*omega1*te*ts*cos(omega1*ts + sigma1) - A1*omega1*ts^2*cos(omega1*ts + sigma1) -
3*A2*te*sin(omega2*te + sigma2) - 3*A2*ts*sin(omega2*te + sigma2) +
3*A1*te*sin(omega1*ts + sigma1) + 3*A1*ts*sin(omega1*ts + sigma1))/(te -
ts)^3


a1 = ( ( 2 * te + ts ) * Delta * ts * D2te + ( te + 2 * ts ) * Delta * te * D1ts - 6 * CP * ( F2te - F1ts ) ) / Delta^3;

a0 = - ( Delta * CP * ( ts * D2te + te * D1ts ) - ( 3 * te - Delta ) * ts^2 * F2te - ( Delta + 3 *ts ) * te^2 * F1ts ) / Delta^3;
